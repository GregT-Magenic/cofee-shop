@startuml

title Coffee Shop Model

namespace shared_kernel {

  class Size {
    +quanity: BigDecimal
  }
  Size .. "1" MeasurementUnit: uses

  enum MeasurementUnit {
    PIECES
    KILOGRAMS
    POUNDS
    LITRES
    FLUID_OUNCE
  }

  class CurrencyValue {
    +quanity: BigDecimal
  }
  CurrencyValue .. "1" Currency: uses

  enum Currency {
    US_DOLLAR
    MEXICAN_PESO
    BITCOIN
  }

  class OrderPlaced <<event>> {
    +coffeeShopId: integer
    +orderId: integer
    +currencyValue: CurrencyValue
    +items: ordering.MenuItem[]
    +dateTime: ZonedDateTime
  }

  class OrderPaid <<event>> {
    +coffeeShopId: integer
    +orderId: integer
    +dateTime: ZonedDateTime
  }

  class OrderReadyForCustomer <<event>> {
    +kitchenOrderId: integer
    +coffeeShopId: integer
    +orderId: integer
    +dateTime: ZonedDateTime
  }

}

namespace ordering {

  class CoffeeShop {
    +id: integer
    +name: String

    Menu createMenu()
    void addMenuItem(toMenu: Menu, foodBeverages: FoodBeverage[], pricingOffers: PricingOffer[])
    void removeMenuItem(fromMenu: Menu, menuItem: MenuItem)
    void deleteMenu(Menu)

    Order createOrder()
    void addOrderItem(toOrder: Order, menuItem: MenuItem, quantity: integer, specialInstructions: String)
    void removeOrderItem(fromOrder: Order, orderItem: OrderItem)
    CurrencyValue calculatePrice(order: Order)
    void submitForPayment(order: Order)
    void cancelOrder(order: Order)
  }

  note left of CoffeeShop::submitForPayment
    emits shared_kernel.OrderPlaced
  end note

  CoffeeShop *-- "0..*" Menu
  CoffeeShop *-- "0..*" Order
  

  class Menu {}
  Menu o-- "0..*" MenuItem

  class Order {
    +id: integer
    +customerName: String
  }
  Order *-- "0..*" OrderItem
  Order *-- "1" OrderStatus

  enum OrderStatus {
    RECEIVING
    SUBMITTED
    CANCELLED
  }

  class OrderItem {
    +id: integer
    +specialInstructions: String
    +quantity: integer
    +size: shared_kernel.Size
  }
  OrderItem o-- "1" MenuItem

  MenuItem *-- "1..*" FoodBeverage
  MenuItem *-- "1..*" PricingOffer

  class FoodBeverage {
    +name: String
    +description: String
  }
  FoodBeverage o-- "1" kitchen.Recipe

  class PricingOffer {
    +name: String
    +size: shared_kernel.Size
    +currencyValue: shared_kernel.CurrencyValue
  }

}

namespace kitchen {

  class Kitchen {
    id: integer
  }
  Kitchen *-- "0..*" Order

  note left of Kitchen
    emits shared_kernel.OrderReadyForCustomer
  end note

  note bottom of Kitchen
    creates Order on sharedKernel.OrderPlaced
    AND sharedKernel.orderPaid
  end note

  class Order {
    +id: integer
  }
  Order o-- "1" ordering.Order
  Order *-- "0..*" OrderItem

  class OrderItem {
    +quantity: integer
    +size: shared_kernel.Size
    void setReady()
  }
  OrderItem o-- "1" Recipe
  OrderItem o-- "1" KitchenStatus

  enum KitchenStatus {
    PENDING
    PREPARING
    READY
  }

  class Recipe {
    +id: integer
  }

}

namespace payment #LightGrey {
  note "generic subdomain" as n1 #LightGrey
}

namespace inventory #LightGrey {
  note "generic subdomain" as n1 #LightGrey
}

namespace suppliers #LightGrey {
  note "generic subdomain" as n1 #LightGrey
}

namespace workforce_management #LightGrey {
  note "generic subdomain" as n1 #LightGrey
}

namespace accounting #LightGrey {
  note "generic subdomain" as n1 #LightGrey
}

namespace marketing #LightGrey {
  note "generic subdomain" as n1 #LightGrey
}

@enduml
